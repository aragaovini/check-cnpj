// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check-Cnpj Page should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CheckCnpj />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <BannerHeader
          code="#0980"
          image="avatar.svg"
          title="Nova cotação"
        />,
        <styled.h3>
          Buscar por CNPJ ou empresa
        </styled.h3>,
        <div
          className="container-input"
        >
          <InputElement
            className="cnpj-input"
            mask="99.999.999/9999-99"
            maskChar=" "
            onChange={[Function]}
            value=""
          />
        </div>,
        <Button
          clickMethod={[Function]}
          text="Ok"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "code": "#0980",
          "image": "avatar.svg",
          "title": "Nova cotação",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Buscar por CNPJ ou empresa",
        },
        "ref": null,
        "rendered": "Buscar por CNPJ ou empresa",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <InputElement
            className="cnpj-input"
            mask="99.999.999/9999-99"
            maskChar=" "
            onChange={[Function]}
            value=""
          />,
          "className": "container-input",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "cnpj-input",
            "mask": "99.999.999/9999-99",
            "maskChar": " ",
            "onChange": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "clickMethod": [Function],
          "text": "Ok",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <BannerHeader
            code="#0980"
            image="avatar.svg"
            title="Nova cotação"
          />,
          <styled.h3>
            Buscar por CNPJ ou empresa
          </styled.h3>,
          <div
            className="container-input"
          >
            <InputElement
              className="cnpj-input"
              mask="99.999.999/9999-99"
              maskChar=" "
              onChange={[Function]}
              value=""
            />
          </div>,
          <Button
            clickMethod={[Function]}
            text="Ok"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "code": "#0980",
            "image": "avatar.svg",
            "title": "Nova cotação",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Buscar por CNPJ ou empresa",
          },
          "ref": null,
          "rendered": "Buscar por CNPJ ou empresa",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <InputElement
              className="cnpj-input"
              mask="99.999.999/9999-99"
              maskChar=" "
              onChange={[Function]}
              value=""
            />,
            "className": "container-input",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "cnpj-input",
              "mask": "99.999.999/9999-99",
              "maskChar": " ",
              "onChange": [Function],
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "clickMethod": [Function],
            "text": "Ok",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
